const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const { v4: uuidv4 } = require('uuid');

const app = express();
app.use(cors());
app.use(bodyParser.json());

const port = process.env.PORT || 4000;

// In-memory job store (demo only)
const jobs = {};

app.post('/api/export', (req, res) => {
  const payload = req.body;
  const jobId = uuidv4();

  // Simulate processing time and create a result later
  jobs[jobId] = {
    id: jobId,
    status: 'queued',
    payload,
    createdAt: new Date().toISOString(),
    downloadUrl: null,
  };

  // Simulate asynchronous processing
  setTimeout(() => {
    jobs[jobId].status = 'processing';
  }, 500);

  setTimeout(() => {
    // In real server run FFmpeg and upload to storage; here we return placeholder URL
    jobs[jobId].status = 'done';
    jobs[jobId].downloadUrl = `https://example.com/exports/${jobId}.mp4`;
  }, 3000 + Math.floor(Math.random() * 4000));

  res.json({ jobId, status: jobs[jobId].status });
});

app.get('/api/export/:jobId', (req, res) => {
  const job = jobs[req.params.jobId];
  if (!job) {
    return res.status(404).json({ error: 'Job not found' });
  }
  res.json({
    jobId: job.id,
    status: job.status,
    downloadUrl: job.downloadUrl,
  });
});

app.listen(port, () => {
  console.log(`Export server listening at http://localhost:${port}`);
});
